{"ast":null,"code":"var _jsxFileName = \"/home/hamna/weathersamp1/src/components/Weekly.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport Typography from '@material-ui/core/Typography';\nimport { CardMedia } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: '20px',\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'auto'\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    alignContent: 'center'\n  },\n  weather__icon: {\n    width: 60,\n    height: 60,\n    top: 0,\n    transform: 'translateY(0%)',\n    left: 0\n  },\n  day: {\n    textAlign: 'center',\n    border: '1px solid',\n    minWidth: '185px'\n  },\n  info: {\n    fontSize: 21,\n    fontWeight: \"bold\"\n  }\n}));\n\nfunction Weekly({\n  weekData\n}) {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(CardMedia, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GridList, {\n    className: classes.gridList,\n    cellHeight: \"auto\",\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, weekData.map(data => /*#__PURE__*/React.createElement(GridListTile, {\n    key: data.key,\n    cols: 0.5,\n    className: classes.day,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, data.key === 0 ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.info,\n    gutterBottom: true,\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"Today\") : /*#__PURE__*/React.createElement(Typography, {\n    className: classes.info,\n    gutterBottom: true,\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, data.day), /*#__PURE__*/React.createElement(\"img\", {\n    src: `https://openweathermap.org/img/w/${data.icon}.png`,\n    alt: data.icon,\n    className: classes.weather__icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    className: classes.info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, data.lTemp, \"\\xB0C - \", data.hTemp, \"\\xB0C\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, data.main, \",\"), /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontWeight: 'bold',\n      paddingBottom: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, data.desc)))));\n}\n\nexport default Weekly;","map":{"version":3,"sources":["/home/hamna/weathersamp1/src/components/Weekly.js"],"names":["React","makeStyles","GridList","GridListTile","Typography","CardMedia","useStyles","theme","root","marginTop","display","flexWrap","justifyContent","overflow","gridList","alignContent","weather__icon","width","height","top","transform","left","day","textAlign","border","minWidth","info","fontSize","fontWeight","Weekly","weekData","classes","map","data","key","icon","lTemp","hTemp","main","paddingBottom","desc"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport Typography from '@material-ui/core/Typography';\nimport { CardMedia } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: '20px',\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'auto',\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    alignContent: 'center',\n  },\n  weather__icon: {\n    width: 60,\n    height: 60,\n    top: 0,\n    transform: 'translateY(0%)',\n    left: 0,\n},\nday: {\n  textAlign: 'center',\n  border: '1px solid',\n  minWidth: '185px',\n},\ninfo:{\n  fontSize: 21,\n  fontWeight: \"bold\",\n}\n}));\n\nfunction Weekly({weekData}) {\n  const classes = useStyles();\n\n  return (\n    <CardMedia className={classes.root}>\n      <GridList className={classes.gridList} cellHeight=\"auto\" spacing={4}>\n        {weekData.map((data) => (\n            <GridListTile key={data.key} cols={0.5} className={classes.day}>\n              { (data.key === 0) ? \n                <Typography className={classes.info} gutterBottom color='error'>\n                  Today\n                </Typography> :\n                <Typography className={classes.info} gutterBottom color='error'>\n                  {data.day}\n                </Typography> \n              }\n              \n              <img\n                src={`https://openweathermap.org/img/w/${data.icon}.png`}\n                alt={data.icon}\n                className={classes.weather__icon}\n              />\n              <Typography gutterBottom className={classes.info}>\n                {data.lTemp}°C - {data.hTemp}°C\n              </Typography>\n              <Typography variant=\"h6\"  gutterBottom>\n                {data.main},\n              </Typography>\n              <h4 style={{fontWeight: 'bold', paddingBottom: '10px'}}>{data.desc}</h4>\n            </GridListTile>\n        ))}\n      </GridList>\n    </CardMedia>\n  );\n}\n\nexport default Weekly;"]},"metadata":{},"sourceType":"module"}